{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nclass AuthInterceptorService {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  intercept(req, next) {\n    const token = this.cookieService.get('jwtToken');\n    ; // you probably want to store it in localStorage or something\n    if (!token) {\n      return next.handle(req);\n    }\n    console.warn(`Bearer ${token}`);\n    const req1 = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next.handle(req1);\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.CookieService));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthInterceptorService };","map":{"version":3,"names":["AuthInterceptorService","constructor","cookieService","intercept","req","next","token","get","handle","console","warn","req1","clone","headers","set","i0","ɵɵinject","i1","CookieService","factory","ɵfac","providedIn"],"sources":["D:\\Angular-Practice-delete\\eAuction.UI\\src\\app\\auth-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private cookieService: CookieService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.cookieService.get('jwtToken');; // you probably want to store it in localStorage or something\n\n    if (!token) {\n      return next.handle(req);\n    }\n    console.warn(`Bearer ${token}`);\n    const req1 = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\n    });\n\n    return next.handle(req1);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,sBAAsB;EAEjCC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAmB;EACpDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAAC,UAAU,CAAC;IAAC,CAAC,CAAC;IAEnD,IAAI,CAACD,KAAK,EAAE;MACV,OAAOD,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;IAEzBK,OAAO,CAACC,IAAI,CAAC,UAAUJ,KAAK,EAAE,CAAC;IAC/B,MAAMK,IAAI,GAAGP,GAAG,CAACQ,KAAK,CAAC;MACrBC,OAAO,EAAET,GAAG,CAACS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUR,KAAK,EAAE;KAC5D,CAAC;IAEF,OAAOD,IAAI,CAACG,MAAM,CAACG,IAAI,CAAC;EAC1B;;AAfWX,sBAAsB,C;mBAAtBA,sBAAsB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAtBlB,sBAAsB,C;SAAtBA,sBAAsB;EAAAmB,OAAA,EAAtBnB,sBAAsB,CAAAoB,IAAA;EAAAC,UAAA,EAFrB;AAAM;SAEPrB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}